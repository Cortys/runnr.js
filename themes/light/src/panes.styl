@import "vars"

posForPos(pos, align)
	left: ((pos/paneCount) + align)*100%
	right: (1 - ((pos+1)/paneCount) - align)*100%

#panes
	position: absolute
	top: distance.close
	left: distance.narrow
	right: distance.narrow
	bottom: size.normal + distance.close

	enable3d()

	$posLeft
		transform: translateX(-100%)
		opacity: 0.5

	$posRight
		transform: translateX(100%)
		opacity: 0.5

	@import "panes/plugin"

	.pane
		position: absolute
		width: auto
		height: auto
		top: 0
		bottom: 0

		z-index: 1

		slowTransition()

		.inner
			position: absolute
			width: auto
			height: auto
			left: distance.narrow
			right: distance.narrow
			top: 0
			bottom: 0

			overflow: hidden

			background-color: color.light
			shadow: bottom
			border-radius: size.radius

		for visible in (1..paneCount)
			align = (1-(visible/paneCount))*0.5
			vMin = visible*1 - 1
			for pos in (0..vMin)
				&.visible{visible}.pos{pos}
					posForPos(pos, align)

					for prevPos in (-1..visible)
						&.prevPos{prevPos}
							&.ng-move:not(.ng-move-active)
								posForPos(prevPos, align)
							if prevPos >= visible
								&.ng-enter:not(.ng-enter-active)
									@extends #panes $posRight
							if prevPos < 0
								&.ng-enter:not(.ng-enter-active)
									@extends #panes $posLeft
	&.lastMovedLeft
		.pane.ng-leave-active
			opacity: 0
			z-index: 0
	&.lastMovedRight
		.pane.ng-leave-active
			opacity: 0
			z-index: 0
	&.lastMovedNone
		.pane
			&.ng-leave-active
				opacity: 0
			&.ng-enter
				opacity: 0
				&.ng-enter-active
					opacity: 1
